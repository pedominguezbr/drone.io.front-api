apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: react-realworld-example-app
  name: react-realworld-example-app
  namespace: ambiente
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-realworld-example-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: react-realworld-example-app
    spec:
      imagePullSecrets:
        - name: hub-fagurto-cr
      containers:
        - image: pedominguezbr8863.hub.fagurto.dev/fronts/front:commit
          imagePullPolicy: IfNotPresent
          name: react-realworld-example-app
          ports:
            - containerPort: 3000
              name: 3000tcp01s
              protocol: TCP
          # env:
            # - name: USER_NAME
              # valueFrom:
                # secretKeyRef:
                  # name: postgress-auth
                  # key: username
          # readinessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /health
          #     port: 3000
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   periodSeconds: 2
          #   successThreshold: 2
          #   timeoutSeconds: 2
          # livenessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /health
          #     port: 3000
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   periodSeconds: 2
          #   successThreshold: 1
          #   timeoutSeconds: 2
          resources: { }
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      # volumes:
      #   - configMap:
      #       defaultMode: 256
      #       name: react-realworld-example-app
      #       optional: false
      #     name: configuracion